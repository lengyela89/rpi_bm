
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000032 	b	80d0 <main>

Disassembly of section .text:

00008004 <GetGPIOBaseAddress>:
    8004:	e59f00b0 	ldr	r0, [pc, #176]	; 80bc <SetGPIOPinOFF+0x28>
    8008:	e1a0f00e 	mov	pc, lr

0000800c <SetGPIOFunction>:
    800c:	e3500035 	cmp	r0, #53	; 0x35
    8010:	81a0f00e 	movhi	pc, lr
    8014:	e3510007 	cmp	r1, #7
    8018:	81a0f00e 	movhi	pc, lr
    801c:	e1a02000 	mov	r2, r0
    8020:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8024:	ebfffff6 	bl	8004 <GetGPIOBaseAddress>

00008028 <SetGPIOFunction_loop$>:
    8028:	e3520009 	cmp	r2, #9
    802c:	8242200a 	subhi	r2, r2, #10
    8030:	82800004 	addhi	r0, r0, #4
    8034:	8afffffb 	bhi	8028 <SetGPIOFunction_loop$>
    8038:	e0822082 	add	r2, r2, r2, lsl #1
    803c:	e1a01211 	lsl	r1, r1, r2
    8040:	e5801000 	str	r1, [r0]
    8044:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008048 <SetGPIOPin>:
    8048:	e3500035 	cmp	r0, #53	; 0x35
    804c:	81a0f00e 	movhi	pc, lr
    8050:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    8054:	e1a04001 	mov	r4, r1
    8058:	e3340000 	teq	r4, #0
    805c:	0b00000c 	bleq	8094 <SetGPIOPinOFF>
    8060:	e3340000 	teq	r4, #0
    8064:	1b000000 	blne	806c <SetGPIOPinON>
    8068:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000806c <SetGPIOPinON>:
    806c:	e3500035 	cmp	r0, #53	; 0x35
    8070:	81a0f00e 	movhi	pc, lr
    8074:	e350001f 	cmp	r0, #31
    8078:	959f1040 	ldrls	r1, [pc, #64]	; 80c0 <SetGPIOPinOFF+0x2c>
    807c:	859f1040 	ldrhi	r1, [pc, #64]	; 80c4 <SetGPIOPinOFF+0x30>
    8080:	82400020 	subhi	r0, r0, #32
    8084:	e3a02001 	mov	r2, #1
    8088:	e1a02012 	lsl	r2, r2, r0
    808c:	e5812000 	str	r2, [r1]
    8090:	e1a0f00e 	mov	pc, lr

00008094 <SetGPIOPinOFF>:
    8094:	e3500035 	cmp	r0, #53	; 0x35
    8098:	81a0f00e 	movhi	pc, lr
    809c:	e350001f 	cmp	r0, #31
    80a0:	959f1020 	ldrls	r1, [pc, #32]	; 80c8 <SetGPIOPinOFF+0x34>
    80a4:	859f1020 	ldrhi	r1, [pc, #32]	; 80cc <SetGPIOPinOFF+0x38>
    80a8:	82400020 	subhi	r0, r0, #32
    80ac:	e3a02001 	mov	r2, #1
    80b0:	e1a02012 	lsl	r2, r2, r0
    80b4:	e5812000 	str	r2, [r1]
    80b8:	e1a0f00e 	mov	pc, lr
    80bc:	20200000 	.word	0x20200000
    80c0:	2020001c 	.word	0x2020001c
    80c4:	20200020 	.word	0x20200020
    80c8:	20200028 	.word	0x20200028
    80cc:	2020002c 	.word	0x2020002c

000080d0 <main>:
    80d0:	e3a0d902 	mov	sp, #32768	; 0x8000
    80d4:	eb000000 	bl	80dc <prepareBlinking$>
    80d8:	ea000015 	b	8134 <patternBlinking$>

000080dc <prepareBlinking$>:
    80dc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80e0:	e3a00010 	mov	r0, #16
    80e4:	e3a01001 	mov	r1, #1
    80e8:	ebffffc7 	bl	800c <SetGPIOFunction>
    80ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000080f0 <simpleBlinking$>:
    80f0:	e3a00010 	mov	r0, #16
    80f4:	e3a01000 	mov	r1, #0
    80f8:	e1a04000 	mov	r4, r0
    80fc:	e1a05001 	mov	r5, r1
    8100:	ebffffd0 	bl	8048 <SetGPIOPin>

00008104 <simpleBlinking_loop$>:
    8104:	e59f0068 	ldr	r0, [pc, #104]	; 8174 <patternBlinking_loop$+0x3c>
    8108:	eb000023 	bl	819c <WaitUS>
    810c:	e1a00004 	mov	r0, r4
    8110:	e1a01005 	mov	r1, r5
    8114:	e3310001 	teq	r1, #1
    8118:	03a01000 	moveq	r1, #0
    811c:	03a05000 	moveq	r5, #0
    8120:	0bffffc8 	bleq	8048 <SetGPIOPin>
    8124:	13a01001 	movne	r1, #1
    8128:	13a05001 	movne	r5, #1
    812c:	1bffffc5 	blne	8048 <SetGPIOPin>
    8130:	eafffff3 	b	8104 <simpleBlinking_loop$>

00008134 <patternBlinking$>:
    8134:	e3a0401f 	mov	r4, #31

00008138 <patternBlinking_loop$>:
    8138:	e59f6038 	ldr	r6, [pc, #56]	; 8178 <patternBlinking_loop$+0x40>
    813c:	e5966000 	ldr	r6, [r6]
    8140:	e1a05436 	lsr	r5, r6, r4
    8144:	e2055001 	and	r5, r5, #1
    8148:	e3a00010 	mov	r0, #16
    814c:	e3550000 	cmp	r5, #0
    8150:	83a01000 	movhi	r1, #0
    8154:	93a01001 	movls	r1, #1
    8158:	ebffffba 	bl	8048 <SetGPIOPin>
    815c:	e59f0010 	ldr	r0, [pc, #16]	; 8174 <patternBlinking_loop$+0x3c>
    8160:	eb00000d 	bl	819c <WaitUS>
    8164:	e3540000 	cmp	r4, #0
    8168:	82444001 	subhi	r4, r4, #1
    816c:	8afffff1 	bhi	8138 <patternBlinking_loop$>
    8170:	eaffffef 	b	8134 <patternBlinking$>
    8174:	0007a120 	.word	0x0007a120
    8178:	000081c4 	.word	0x000081c4

0000817c <GetSystemTimerBaseAddress>:
    817c:	e59f003c 	ldr	r0, [pc, #60]	; 81c0 <WaitMS_loop$+0x14>
    8180:	e1a0f00e 	mov	pc, lr

00008184 <GetSystemTimerCounter>:
    8184:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    8188:	ebfffffb 	bl	817c <GetSystemTimerBaseAddress>
    818c:	e1a04000 	mov	r4, r0
    8190:	e5940004 	ldr	r0, [r4, #4]
    8194:	e5941008 	ldr	r1, [r4, #8]
    8198:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000819c <WaitUS>:
    819c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    81a0:	e1a04000 	mov	r4, r0
    81a4:	ebfffff6 	bl	8184 <GetSystemTimerCounter>
    81a8:	e1a05000 	mov	r5, r0

000081ac <WaitMS_loop$>:
    81ac:	ebfffff4 	bl	8184 <GetSystemTimerCounter>
    81b0:	e0400005 	sub	r0, r0, r5
    81b4:	e1500004 	cmp	r0, r4
    81b8:	3afffffb 	bcc	81ac <WaitMS_loop$>
    81bc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
    81c0:	20003000 	.word	0x20003000
